  class Solution {
        int i = 0;

        private TreeNode buildTreeHelper(Map<Integer, Integer> map, int[] preorder, int l, int r) {
            if (l > r ) {
                return null;
            }
            int rootValue = preorder[i++];
            TreeNode root = new TreeNode(rootValue);
            int mid = map.get(rootValue);
            root.left = buildTreeHelper(map, preorder, l, mid - 1);
            root.right = buildTreeHelper(map, preorder, mid + 1, r);
            
            return root;
        }

        public TreeNode buildTree(int[] preorder, int[] inorder) {
            i = 0;
            Map<Integer, Integer> map = new HashMap<>();
            for (int i = 0; i < inorder.length; i++) {
                map.put(inorder[i], i);
            }
            return buildTreeHelper(map, preorder, 0, preorder.length - 1);
        }
    }
//runtime:3 ms
//memory:35.2 MB
